apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: debezium
data:
  01-privileges.sql: |
    -- Grant required privileges for Debezium CDC to mysqluser
    GRANT SELECT, RELOAD, SHOW DATABASES, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'mysqluser'@'%';
    GRANT ALL PRIVILEGES ON inventory.* TO 'mysqluser'@'%';
    FLUSH PRIVILEGES;

  02-sample-data.sql: |
    USE inventory;
    
    -- Create sample tables
    CREATE TABLE IF NOT EXISTS customers (
                                             id INT AUTO_INCREMENT PRIMARY KEY,
                                             first_name VARCHAR(255) NOT NULL,
        last_name VARCHAR(255) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
    
    CREATE TABLE IF NOT EXISTS orders (
                                          id INT AUTO_INCREMENT PRIMARY KEY,
                                          customer_id INT,
                                          order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                          status VARCHAR(50) DEFAULT 'pending',
        total_amount DECIMAL(10,2),
        FOREIGN KEY (customer_id) REFERENCES customers(id)
        );
    
    -- Insert sample data
    INSERT IGNORE INTO customers (id, first_name, last_name, email) VALUES
    (1, 'John', 'Doe', 'john.doe@example.com'),
    (2, 'Jane', 'Smith', 'jane.smith@example.com'),
    (3, 'Bob', 'Johnson', 'bob.johnson@example.com');
    
    INSERT IGNORE INTO orders (id, customer_id, status, total_amount) VALUES
    (1, 1, 'completed', 99.99),
    (2, 2, 'pending', 149.99),
    (3, 1, 'shipped', 79.99);
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: debezium
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ['sh', '-c', 'rm -rf /var/lib/mysql/* /var/lib/mysql/..?* /var/lib/mysql/.[!.]* 2>/dev/null || true && chown -R 999:999 /var/lib/mysql && chmod -R 755 /var/lib/mysql']
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
          securityContext:
            runAsUser: 0
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "debezium"
            - name: MYSQL_USER
              value: "mysqluser"
            - name: MYSQL_PASSWORD
              value: "mysqlpw"
            - name: MYSQL_DATABASE
              value: "inventory"
          args:
            - "--log-bin=mysql-bin"
            - "--binlog-format=ROW"
            - "--server-id=1"
            - "--gtid-mode=ON"
            - "--enforce-gtid-consistency=ON"
            - "--binlog-row-image=FULL"
            - "--default-authentication-plugin=mysql_native_password"
            - "--bind-address=0.0.0.0"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-init
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          # Simple TCP socket health checks - most reliable
          startupProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30  # 5 minutes total
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-init
          configMap:
            name: mysql-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: debezium
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306